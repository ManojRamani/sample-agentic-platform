apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: logs
  namespace: {{ .Values.namespace }}
spec:
  mode: daemonset
  serviceAccount: {{ .Values.serviceAccount.name }}
  securityContext:
    runAsUser: 0
    runAsGroup: 0
    readOnlyRootFilesystem: true
    privileged: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
      add: ["DAC_READ_SEARCH"]  # Minimal capability needed to read protected files
  volumeMounts:
  - name: varlogcontainers
    mountPath: /var/log/containers
    readOnly: true
  - name: varlogpods
    mountPath: /var/log/pods
    readOnly: true
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
  volumes:
  - name: varlogcontainers
    hostPath:
      path: /var/log/containers
  - name: varlogpods
    hostPath:
      path: /var/log/pods
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers
  config:
    receivers:
      filelog:
        include_file_path: true
        include:
          - /var/log/pods/*/*/*.log
        operators:
          - id: container-parser
            type: container
    processors:
      batch: {}
      memory_limiter:
        check_interval: 1s
        limit_mib: 1000
      k8sattributes:
        pod_association:
          - sources:
            - from: resource_attribute
              name: k8s.pod.ip
            - from: resource_attribute
              name: k8s.pod.uid
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.namespace.name
            - k8s.node.name
            - k8s.container.name
      resource:
        attributes:
          - key: log.collection.type
            value: otel
            action: upsert
      resourcedetection:
        detectors: [eks]
    exporters:
      debug: {}
      awscloudwatchlogs:
        region: {{ .Values.region }}
        log_group_name: "/aws/containerinsights/{{ .Values.clusterName }}/application"
        log_stream_name: "/k8s/%{k8s.namespace.name}/%{k8s.pod.name}/%{k8s.container.name}"
    service:
      pipelines:
        logs:
          receivers: [filelog]
          processors: [memory_limiter, batch, k8sattributes, resource, resourcedetection]
          exporters: [awscloudwatchlogs, debug]